1.synchronized阻塞无法打断，使用不一样的锁机制

公平锁：
OS中，本身的竞争机制是不公平的。这种不公平体现在线程被唤起的顺序不是按照先排队的先唤起。OS只考虑效率，不考虑公平，一旦锁标记被释放之后，会让
所有阻塞的线程一起竞争锁，谁先拿到锁谁先运行

ReentrantLock可以做公平锁。公平锁，等待时间长的线程先被唤起
synchronized不是公平锁
公平锁底层实现原理：进入线程后，会调用.lock()方法，同时记录线程等待时间